<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\EservicesBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class EproduitRepository extends EntityRepository {

    protected $query;

    private function myFindJoin() {
        $values = array('a,
                    partial b.{id,name,description},
                    partial c.{id,name,description}, 
                    partial d.{id,nom,description},
                    partial e.{id,username},
                     partial f.{id,nom,description},
                    partial h.{id}'
        );
        $query = $this->createQueryBuilder('a')
                ->select($values)
                ->leftJoin('a.services', 'b')
                ->leftJoin('a.categorie', 'c')
                ->leftJoin('a.idStatus', 'd')
                ->leftJoin('a.proprietaire', 'e')
                ->leftJoin('a.idStatus', 'f')
                ->leftJoin('a.comments', 'h')
        ;
        return ($query);
    }

    public function myFind() {

        $this->query = $this->myFindJoin()
                ->add('orderBy', 'a.id DESC');
        return $this->query;
        //->getQuery();
    }

    public function myFindAll($user_id) {

        $this->query = $this->myFindJoin();
        $query = $this->query
                ->where('a.proprietaire = :proprietaire')
                ->add('orderBy', 'a.id DESC')
                ->setParameter('proprietaire', $user_id);
               // ->getQuery();
        return $query;
    }

    public function myFindId($id) {

        $this->query = $this->myFindJoin();
        $query = $this->query
                        ->where('a.id = :myid')
                        ->addSelect('partial i.{id,nomGroup}')
                        ->leftJoin('e.idgroup', 'i')
                        ->setParameter('myid', $id)
                        ->getQuery()->getSingleResult();
        return $query;
    }

    public function myFindOtherAll($user_id, $group_id) {

        $this->query = $this->myFindJoin();
        $query = $this->query
                ->where('a.proprietaire <> :proprietaire')
                ->setParameter('proprietaire', $user_id)
                ->addSelect('partial g.{id}')
                ->leftJoin('a.proprietaire', 'g')
                ->andWhere('g.idgroup = :groupid')
                ->setParameter('groupid', $group_id)
                ->add('orderBy', 'a.id DESC');
                //->getQuery();
        return $query;
    }

}